<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Personalized Chatbots - Your AI Friend</title>
    <style>
        :root {
            --primary: #4361ee;
            --secondary: #3f37c9;
            --accent: #4cc9f0;
            --light: #f8f9fa;
            --dark: #212529;
            --success: #4ade80;
            --danger: #f87171;
            --warning: #fbbf24;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: #f0f2f5;
            color: var(--dark);
            line-height: 1.6;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1rem;
        }
        
        header {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            padding: 1.5rem 0;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        
        .nav-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .logo {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 1.5rem;
            font-weight: 700;
        }
        
        .logo-icon {
            font-size: 2rem;
        }
        
        nav ul {
            display: flex;
            list-style: none;
            gap: 2rem;
        }
        
        nav a {
            color: white;
            text-decoration: none;
            font-weight: 500;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            transition: background-color 0.3s;
        }
        
        nav a:hover {
            background-color: rgba(255, 255, 255, 0.2);
        }
        
        .hero {
            background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url('/api/placeholder/1200/400') center/cover;
            color: white;
            padding: 5rem 0;
            text-align: center;
        }
        
        .hero h1 {
            font-size: 3rem;
            margin-bottom: 1rem;
        }
        
        .hero p {
            font-size: 1.25rem;
            max-width: 700px;
            margin: 0 auto 2rem;
        }
        
        .btn {
            display: inline-block;
            padding: 0.75rem 1.5rem;
            border-radius: 4px;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s;
            cursor: pointer;
        }
        
        .btn-primary {
            background-color: var(--primary);
            color: white;
        }
        
        .btn-primary:hover {
            background-color: var(--secondary);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        
        .features {
            padding: 5rem 0;
            background-color: white;
        }
        
        .section-title {
            text-align: center;
            margin-bottom: 3rem;
        }
        
        .section-title h2 {
            font-size: 2.5rem;
            color: var(--primary);
            margin-bottom: 1rem;
        }
        
        .section-title p {
            font-size: 1.1rem;
            color: #555;
            max-width: 700px;
            margin: 0 auto;
        }
        
        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
        }
        
        .feature-card {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 2rem;
            text-align: center;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            transition: transform 0.3s, box-shadow 0.3s;
        }
        
        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
        }
        
        .feature-icon {
            font-size: 3rem;
            color: var(--primary);
            margin-bottom: 1rem;
        }
        
        .feature-card h3 {
            margin-bottom: 1rem;
            color: var(--dark);
        }
        
        .chatbot-section {
            padding: 5rem 0;
            background-color: #f0f2f5;
        }
        
        .chatbot-container {
            display: flex;
            flex-direction: column;
            max-width: 800px;
            margin: 0 auto;
            background-color: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }
        
        .chatbot-header {
            background: linear-gradient(to right, var(--primary), var(--secondary));
            color: white;
            padding: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .chatbot-header h3 {
            margin: 0;
        }
        
        .chatbot-messages {
            height: 400px;
            padding: 1rem;
            overflow-y: auto;
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }
        
        .message {
            max-width: 80%;
            padding: 0.75rem 1rem;
            border-radius: 16px;
            word-break: break-word;
        }
        
        .bot-message {
            align-self: flex-start;
            background-color: #f0f2f5;
        }
        
        .user-message {
            align-self: flex-end;
            background-color: var(--primary);
            color: white;
        }
        
        .chatbot-input {
            padding: 1rem;
            border-top: 1px solid #ddd;
            display: flex;
            gap: 0.5rem;
        }
        
        .chatbot-input input {
            flex: 1;
            padding: 0.75rem 1rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            outline: none;
        }
        
        .chatbot-input input:focus {
            border-color: var(--primary);
        }
        
        .chatbot-input button {
            background-color: var(--primary);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 600;
            transition: background-color 0.3s;
        }
        
        .chatbot-input button:hover {
            background-color: var(--secondary);
        }
        
        .cta-section {
            padding: 5rem 0;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            text-align: center;
        }
        
        .cta-content {
            max-width: 700px;
            margin: 0 auto;
        }
        
        .cta-content h2 {
            font-size: 2.5rem;
            margin-bottom: 1.5rem;
        }
        
        .cta-content p {
            font-size: 1.1rem;
            margin-bottom: 2rem;
        }
        
        .btn-light {
            background-color: white;
            color: var(--primary);
        }
        
        .btn-light:hover {
            background-color: #f0f2f5;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        
        footer {
            background-color: var(--dark);
            color: white;
            padding: 3rem 0;
        }
        
        .footer-content {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 2rem;
        }
        
        .footer-column h4 {
            margin-bottom: 1.5rem;
            font-size: 1.2rem;
        }
        
        .footer-column ul {
            list-style: none;
        }
        
        .footer-column li {
            margin-bottom: 0.5rem;
        }
        
        .footer-column a {
            color: #ddd;
            text-decoration: none;
            transition: color 0.3s;
        }
        
        .footer-column a:hover {
            color: white;
        }
        
        .copyright {
            text-align: center;
            padding-top: 2rem;
            margin-top: 2rem;
            border-top: 1px solid #444;
        }
        
        @media (max-width: 768px) {
            .hero h1 {
                font-size: 2rem;
            }
            
            .hero p {
                font-size: 1rem;
            }
            
            .section-title h2 {
                font-size: 2rem;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="container nav-container">
            <div class="logo">
                <span class="logo-icon">🤖</span>
                <span>Personalized Chatbots</span>
            </div>
            <nav>
                <ul>
                    <li><a href="#features">Features</a></li>
                    <li><a href="#demo">Demo</a></li>
                    <li><a href="#get-started">Get Started</a></li>
                </ul>
            </nav>
        </div>
    </header>
    
    <section class="hero">
        <div class="container">
            <h1>Meet Your AI Friend</h1>
            <p>Personalized chatbots that remember details about your friends and answer questions about them. Create your own custom information assistant today!</p>
            <a href="#demo" class="btn btn-primary">Try Demo</a>
        </div>
    </section>
    
    <section class="features" id="features">
        <div class="container">
            <div class="section-title">
                <h2>Key Features</h2>
                <p>Our powerful chatbot technology makes it easy to build personalized information assistants</p>
            </div>
            
            <div class="feature-grid">
                <div class="feature-card">
                    <div class="feature-icon">🔍</div>
                    <h3>Smart Queries</h3>
                    <p>Our chatbots understand partial queries and various phrasings to make interactions feel natural.</p>
                </div>
                
                <div class="feature-card">
                    <div class="feature-icon">💾</div>
                    <h3>Custom Information</h3>
                    <p>Store and retrieve any type of information about people, places, or topics that matter to you.</p>
                </div>
                
                <div class="feature-card">
                    <div class="feature-icon">🔄</div>
                    <h3>Easy Integration</h3>
                    <p>Embed on your website or deploy as a standalone application with minimal setup.</p>
                </div>
            </div>
        </div>
    </section>
    
    <section class="chatbot-section" id="demo">
        <div class="container">
            <div class="section-title">
                <h2>Try It Yourself</h2>
                <p>Interact with our Friends Information chatbot below</p>
            </div>
            
            <div class="chatbot-container">
                <div class="chatbot-header">
                    <span>🤖</span>
                    <h3>Friends Information Chatbot</h3>
                </div>
                
                <div class="chatbot-messages" id="chat-messages">
                    <div class="message bot-message">
                        Hi there! I'm the Friends Information Chatbot. You can ask me about any of our friends like Suraj, Nagendra, Akul, Anil, Varsha, Manasa, Surekha, or Tejasvini. Try asking about their age, relationship status, dream job, best friend, or hidden talent!
                    </div>
                </div>
                
                <div class="chatbot-input">
                    <input type="text" id="user-input" placeholder="Type your message here..." />
                    <button id="send-button">Send</button>
                </div>
            </div>
        </div>
    </section>
    
    <section class="cta-section" id="get-started">
        <div class="container">
            <div class="cta-content">
                <h2>Create Your Own Chatbot</h2>
                <p>Ready to build a personalized chatbot for your own use case? Get started in minutes with our easy-to-use platform.</p>
                <a href="#" class="btn btn-light">Get Started Free</a>
            </div>
        </div>
    </section>
    
    <footer>
        <div class="container">
            <div class="footer-content">
                <div class="footer-column">
                    <h4>Company</h4>
                    <ul>
                        <li><a href="#">About Us</a></li>
                        <li><a href="#">Our Team</a></li>
                        <li><a href="#">Careers</a></li>
                        <li><a href="#">Contact</a></li>
                    </ul>
                </div>
                
                <div class="footer-column">
                    <h4>Resources</h4>
                    <ul>
                        <li><a href="#">Documentation</a></li>
                        <li><a href="#">API Reference</a></li>
                        <li><a href="#">Examples</a></li>
                        <li><a href="#">Tutorials</a></li>
                    </ul>
                </div>
                
                <div class="footer-column">
                    <h4>Legal</h4>
                    <ul>
                        <li><a href="#">Privacy Policy</a></li>
                        <li><a href="#">Terms of Service</a></li>
                        <li><a href="#">Cookie Policy</a></li>
                        <li><a href="#">GDPR</a></li>
                    </ul>
                </div>
                
                <div class="footer-column">
                    <h4>Connect</h4>
                    <ul>
                        <li><a href="#">Twitter</a></li>
                        <li><a href="#">LinkedIn</a></li>
                        <li><a href="#">GitHub</a></li>
                        <li><a href="#">YouTube</a></li>
                    </ul>
                </div>
            </div>
            
            <div class="copyright">
                <p>&copy; 2025 Personalized Chatbots. All rights reserved.</p>
            </div>
        </div>
    </footer>
    
    <script>
        // Sample friends data from your C program
        const friends = [
            {
                name: "Suraj",
                age: 20,
                relationship_status: "Has 2 girlfriends",
                dream_job: "Owns 3 companies",
                best_friend: "Nobody",
                hidden_talent: "Can detect fake people"
            },
            {
                name: "Nagendra",
                age: 20,
                relationship_status: "Single",
                dream_job: "Software Engineer",
                best_friend: "Akul",
                hidden_talent: "Can write while sleeping"
            },
            {
                name: "Akul",
                age: 20,
                relationship_status: "Single",
                dream_job: "Web Designer",
                best_friend: "Nagendra",
                hidden_talent: "Can sleep standing"
            },
            {
                name: "Anil",
                age: 20,
                relationship_status: "Single",
                dream_job: "Cricket Analyzer",
                best_friend: "Sathyajit",
                hidden_talent: "Can talk while sleeping"
            },
            {
                name: "Varsha",
                age: 20,
                relationship_status: "Single",
                dream_job: "Pilot",
                best_friend: "Saarah",
                hidden_talent: "Can detect lies"
            },
            {
                name: "Manasa",
                age: 20,
                relationship_status: "Single",
                dream_job: "Web Designer",
                best_friend: "Surekha",
                hidden_talent: "Can detect jokes very easily"
            },
            {
                name: "Surekha",
                age: 20,
                relationship_status: "Single",
                dream_job: "Software Engineer",
                best_friend: "Manasa",
                hidden_talent: "Attracts good people"
            },
            {
                name: "Tejasvini",
                age: 20,
                relationship_status: "Single",
                dream_job: "Data Analyst",
                best_friend: "Manya",
                hidden_talent: "Attracts marks"
            }
        ];
        
        // DOM elements
        const chatMessages = document.getElementById('chat-messages');
        const userInput = document.getElementById('user-input');
        const sendButton = document.getElementById('send-button');
        
        // Event listeners
        sendButton.addEventListener('click', handleUserInput);
        userInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                handleUserInput();
            }
        });
        
        // Function to handle user input
        function handleUserInput() {
            const message = userInput.value.trim();
            if (message === '') return;
            
            // Add user message to chat
            addMessage(message, 'user');
            
            // Process the input and generate a response
            const response = processInput(message);
            
            // Add bot response after a short delay
            setTimeout(() => {
                addMessage(response, 'bot');
            }, 600);
            
            // Clear input field
            userInput.value = '';
        }
        
        // Function to add message to chat
        function addMessage(message, sender) {
            const messageElement = document.createElement('div');
            messageElement.classList.add('message');
            messageElement.classList.add(sender === 'user' ? 'user-message' : 'bot-message');
            messageElement.textContent = message;
            
            chatMessages.appendChild(messageElement);
            
            // Scroll to bottom
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }
        
        // Function to process user input and return a response
        function processInput(input) {
            const lowerInput = input.toLowerCase();
            
            // Check for help command
            if (lowerInput === 'help' || lowerInput === 'commands' || lowerInput === '?') {
                return `Available commands:
- Ask about [name]
- [name]'s age/how old is [name]
- [name]'s relationship status
- [name]'s dream job
- [name]'s best friend
- [name]'s hidden talent
- list all friends
- help`;
            }
            
            // Check for list all command
            if (lowerInput === 'list all' || lowerInput === 'all friends' || lowerInput === 'show all') {
                let response = "All Friends:\n";
                friends.forEach(friend => {
                    response += `- ${friend.name}\n`;
                });
                return response;
            }
            
            // Check for "who is single"
            if (lowerInput.includes('who') && lowerInput.includes('single')) {
                let response = "Single friends:\n";
                const singleFriends = friends.filter(friend => friend.relationship_status.toLowerCase() === 'single');
                singleFriends.forEach(friend => {
                    response += `- ${friend.name}\n`;
                });
                return response;
            }
            
            // Try to find a matching friend
            for (const friend of friends) {
                const lowerName = friend.name.toLowerCase();
                const shortName = friend.name.toLowerCase().substring(0, 3);
                
                if (lowerInput.includes(lowerName) || lowerInput.includes(shortName)) {
                    // Age query
                    if (lowerInput.includes('age') || lowerInput.includes('old') || lowerInput.includes('year')) {
                        return `${friend.name} is ${friend.age} years old.`;
                    }
                    
                    // Relationship query
                    if (lowerInput.includes('relation') || lowerInput.includes('girlfriend') || 
                        lowerInput.includes('status') || lowerInput.includes('dating') || 
                        lowerInput.includes('single')) {
                        return `${friend.name}'s relationship status: ${friend.relationship_status}`;
                    }
                    
                    // Dream job query
                    if (lowerInput.includes('dream') || lowerInput.includes('job') || 
                       lowerInput.includes('career') || lowerInput.includes('work') ||
                       lowerInput.includes('profession')) {
                        return `${friend.name}'s dream job: ${friend.dream_job}`;
                    }
                    
                    // Best friend query
                    if (lowerInput.includes('friend') || lowerInput.includes('best') || 
                       lowerInput.includes('buddy') || lowerInput.includes('pal')) {
                        return `${friend.name}'s best friend: ${friend.best_friend}`;
                    }
                    
                    // Hidden talent query
                    if (lowerInput.includes('talent') || lowerInput.includes('skill') || 
                       lowerInput.includes('ability') || lowerInput.includes('special') ||
                       lowerInput.includes('gift') || lowerInput.includes('good at')) {
                        return `${friend.name}'s hidden talent: ${friend.hidden_talent}`;
                    }
                    
                    // General info if no specific query
                    return `About ${friend.name}:
Age: ${friend.age}
Relationship Status: ${friend.relationship_status}
Dream Job: ${friend.dream_job}
Best Friend: ${friend.best_friend}
Hidden Talent: ${friend.hidden_talent}`;
                }
            }
            
            // Try first name matches only (for very short queries)
            for (const friend of friends) {
                const nameStart = friend.name.substring(0, 3).toLowerCase();
                if (lowerInput.includes(nameStart)) {
                    return `Did you mean ${friend.name}? Ask me something specific about ${friend.name}.`;
                }
            }
            
            // No match found
            return "I'm not sure who you're asking about. Try using a friend's name like 'Suraj', 'Nagendra', etc. Type 'list all' to see all available friends.";
        }
    </script>
</body>
</html>